name: Raynyze CI/CD Pipeline

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main"]

env:
  NODE_VERSION: 20

jobs:
  # Quality checks (linting, formatting, type checking)
  quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Type generation
        run: npx react-router typegen

      - name: ✅ TypeScript check
        run: npx tsc --noEmit

      - name: 🧹 Lint check
        run: npm run lint
        continue-on-error: true

  # Build and test
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: quality

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm test --if-present

      - name: 🏗️ Build application
        run: npm run build

      - name: 📊 Build size analysis
        run: |
          echo "Build completed successfully!"
          du -sh build/

      - name: 🗂️ Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: build/
          retention-days: 1

  # Deploy to production (only on main branch)
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [quality, build-and-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🚀 Deploy to Vercel
        env:
          VERCEL_DEPLOY_HOOK: ${{ secrets.VERCEL_DEPLOY_HOOK }}
        run: |
          if [ -n "$VERCEL_DEPLOY_HOOK" ]; then
            curl -X POST "$VERCEL_DEPLOY_HOOK"
            echo "✅ Deployment triggered successfully!"
          else
            echo "⚠️ VERCEL_DEPLOY_HOOK not configured"
            exit 1
          fi

  # Security scanning
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🔒 Run security audit
        run: npm audit --audit-level=high
